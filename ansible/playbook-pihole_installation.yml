---

- name: 'Gather facts'
  hosts: 'k3sservers'
  gather_facts: true
  become: true

- name: 'Install Pi-Hole'
  hosts: 'k3sservers[0]'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the pihole namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'pihole'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Create the pihole admin secret'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: pihole-admin-secret
            namespace: pihole
          stringData:
            password: totallynotsecure

    - name: 'Install pihole via the helm chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: 'https://mojo2600.github.io/pihole-kubernetes/'
        chart_ref: 'pihole'
        release_name: 'pihole'
        release_namespace: 'pihole'
        release_values:
          admin:
            enabled: true
            existingSecret: pihole-admin-secret
          serviceDns:
            type: ClusterIP
          serviceDhcp:
            enabled: false
          serviceWeb:
            https:
              enabled: false
          virtualHost: "pihole.{{ hostvars['k3sserver1']['ansible_default_ipv4']['address'] }}.sslip.io"
          ingress:
            enabled: true
            hosts:
              - "pihole.{{ hostvars['k3sserver1']['ansible_default_ipv4']['address'] }}.sslip.io"
          persistentVolumeClaim:
            enabled: true
          # Quad9
          DNS1: '9.9.9.9'
          # dismail.de
          DNS2: '116.203.32.217'

    - name: 'Create an ingressrouteTCP for DNS'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: traefik.io/v1alpha1
          kind: IngressRouteTCP
          metadata:
            name: pihole-dns-tcp
            namespace: pihole
          spec:
            entryPoints:
              - dns-tcp
            routes:
            - match: HostSNI(`*`)
              services:
              - name: pihole-dns-tcp
                port: 53

    - name: 'Create an ingressrouteUDP for DNS'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: traefik.io/v1alpha1
          kind: IngressRouteUDP
          metadata:
            name: pihole-dns-udp
            namespace: pihole
          spec:
            entryPoints:
              - dns-udp
            routes:
            - match: HostSNI(`*`)
              services:
              - name: pihole-dns-udp
                port: 53

    - name: 'Wait until all pods are running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: pihole
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
      retries: 36
      delay: 10

    - name: 'Wait until all pods are ready'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: pihole
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.containerStatuses[*].ready") | unique | sort == [[true]]
      retries: 36
      delay: 10

    - name: 'Wait for the pihole URL to be available'
      delegate_to: 'localhost'
      ansible.builtin.uri:
        url: "http://pihole.{{ hostvars['k3sserver1']['ansible_default_ipv4']['address'] }}.sslip.io"
        validate_certs: false
      register: result
      until: "result.status == 200"
      retries: 31
      delay: 10

    - name: 'Output pihole URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "The pihole UI is reachable at http://pihole.{{ hostvars['k3sserver1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'Output pihole credentials'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "Log in using the admin user and the password 'totallynotsecure'"
